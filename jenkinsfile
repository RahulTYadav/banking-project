pipeline {
  agent any
    tools{
      maven 'M2_HOME'
          }
   stages {
    stage('Git checkout') {
      steps {
         echo 'This is for cloning the gitrepo'
         git branch: 'master', url: 'https://github.com/RahulTYadav/banking-project.git'
                          }
            }
    stage('Create a Package') {
      steps {
         echo 'This will create a package using maven'
         sh 'mvn package'
                             }
            }

    stage('Publish the HTML Reports') {
      steps {
          publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/Banking-Project/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                        }
            }
    stage('Create a Docker image from the Package Insure-Me.jar file') {
      steps {
        sh 'docker build -t rahultyadav/bankingproject:3.0 .'
                    }
            }
    stage('Login to Dockerhub') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerlogin', passwordVariable: 'Godisgreat@123', usernameVariable: 'rahultyadav')]) {
        sh 'docker login -u ${rahultyadav} -p ${Godisgreat@123}'
                                                                    }
                                }
            }
    stage('Push the Docker image') {
      steps {
        sh 'docker push rahultyadav/bankingproject:3.0'
                                }
            }
 //   stage('Ansbile config and Deployment') {
 //     steps {
 //       ansiblePlaybook credentialsId: 'ansible-ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'ansibledeploy.yml', vaultTmpPath: ''
 //                              }
//          }
      stage('Terraform creation of EC2 Instance for deployment') {
      steps {
         dir('terraform-files') {
         sh 'sudo chmod 600 learnawskey.pem'
         sh 'terraform init'
         sh 'terraform validate'
         sh 'terraform apply --auto-approve'
                                }
            }
        }
    }
}
